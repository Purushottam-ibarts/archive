apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

 
react {
}
 
def enableProguardInReleaseBuilds = false 
def jscFlavor = 'org.webkit:android-jsc:+'
def enableSeparateBuildPerCPUArchitecture = false

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion 
    namespace "com.dianclub" 

     compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8  // or VERSION_11, VERSION_17
        targetCompatibility JavaVersion.VERSION_1_8
    }
   
    defaultConfig {
        applicationId "com.dianclub"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"  
        missingDimensionStrategy "store", "play"
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // Caution! In production, you need to generate your own keystore file.
            // see https://reactnative.dev/docs/signed-apk-android.
            // signingConfig signingConfigs.debug
             signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    } 
    //   flavorDimensions "store" // Ensure this matches your project's configuration

    //  defaultConfig {
    //     // Set a default flavor for ambiguous cases
    //     missingDimensionStrategy "store", "play" // Replace "play" with your desired default
    // }
}

dependencies { 
    implementation("com.facebook.react:react-android")
    // implementation 'com.android.support:multidex:2.0.1' 
    // implementation project(":react-native-iap") 

    implementation platform('com.google.firebase:firebase-bom:32.1.1') // Use the latest version
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.android.gms:play-services-auth:20.8.0'

    
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); 
applyNativeModulesAppBuildGradle(project)
apply plugin: 'com.google.gms.google-services'
